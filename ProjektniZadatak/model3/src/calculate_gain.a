	.public _calculate_gain

	.extern _headroom
	.extern _samples
	.extern _selected_mode
	.extern _tremoloBuffer
	.extern _tremoloLeftIterator
	.extern _tremoloRightIterator
	.extern _resetIterators

	.xdata_ovly
__extractedConst_0_5
	.dw  (0x4026e547)
	.xdata_ovly
__extractedConst_1_1
	.dw  (0x5a9df97b)
	.xdata_ovly
__extractedConst_2_2
	.dw  (0x65ac8a37)
	.xdata_ovly
_headroom
	.bss (0x1)
	.xdata_ovly
_samples
	.bss (0x5)
	.ydata_ovly
_selected_mode
	.dw  (0x1)
	.xdata_ovly

_tremoloBuffer
	.bss (0x20)
	.ydata_ovly
_tremoloLeftIterator
	.dw _tremoloBuffer
	.ydata_ovly
_tremoloRightIterator
	.dw _tremoloBuffer+16

	.code_ovly
	
_calculate_gain:	

	xmem[i7] = i7	
	i7 += 1		
	i7 = i7 + (0x1)		
	call (_resetIterators)		
	i0 = i7 - (0x1)		
	a0 = 0		
	xmem[i0] = a0h			
	do (0x10), label_end_92			# LN: 74 | 
label_begin_92:			
	a0 = ymem[_selected_mode]			# LN: 76 | 
	uhalfword(a1) = (0x1)			# LN: 76 | 
	a0 - a1			# LN: 76 | 
	if (a == 0) jmp (else_8)			# LN: 76 | 
	i0 = xmem[_samples]			# LN: 81 | 
	i1 = xmem[_samples + 1]			# LN: 81 | 
	a0 = xmem[i0]			# LN: 81 | 
	a1 = xmem[i1]			# LN: 81 | 
	a0 = a0 + a1			# LN: 81 | 
	x0 = a0h			# LN: 81 | 
	x1 = xmem[__extractedConst_0_5 + 0]			# LN: 81 | 
	a0 = x1 * x0			# LN: 81 | 
	xmem[_headroom] = a0			# LN: 81 | 
	x0 = xmem[_headroom]			# LN: 82 | 
	x1 = xmem[__extractedConst_1_1]			# LN: 82 | 
	a0 = x0 * x1			# LN: 82 | 
	xmem[_headroom] = a0			# LN: 82 | 
	i0 = xmem[_samples]			# LN: 83 | 
	x0 = xmem[__extractedConst_0_5]			# LN: 83 | 
	x1 = xmem[_headroom]			# LN: 83 | 
	a0 = x0 * x1			# LN: 83 | 
	xmem[i0] = a0			# LN: 83 | 
	i0 = xmem[_samples + 1]			# LN: 84 | 
	x0 = xmem[__extractedConst_0_5]			# LN: 84 | 
	x1 = xmem[_headroom]			# LN: 84 | 
	a0 = x0 * x1			# LN: 84 | 
	xmem[i0] = a0			# LN: 84 | 
	i0 = xmem[_samples]			# LN: 86 | 
	nop #empty cycle
	i0 += 1			# LN: 86 | 
	xmem[_samples] = i0			# LN: 86 | 
	i0 = xmem[_samples + 1]			# LN: 87 | 
	nop #empty cycle
	i0 += 1			# LN: 87 | 
	xmem[_samples + 1] = i0			# LN: 87 | 
	jmp (endif_8)			# LN: 87 | 
endif_8:			
else_8:			
	a0 = ymem[_selected_mode + 0]			# LN: 89 | 
	a0g = (0x0)			# LN: 89 | 
	a0 & a0			# LN: 89 | 
	if (a == 0) jmp (else_9)			# LN: 89 | 
	a0 = ymem[_tremoloLeftIterator + 0]			# LN: 93 | 
	AnyReg(i0, a0h)			# LN: 93 | 
	i1 = xmem[_samples + 3]			# LN: 93 | 
	x0 = ymem[i0]			# LN: 93 | 
	x1 = xmem[__extractedConst_2_2 + 0]			# LN: 93 | 
	a0 = x1 * x0			# LN: 93 | 
	i0 = ymem[_tremoloLeftIterator + 0]			# LN: 93 | 
	xmem[i1] = a0			# LN: 93 | 
	i0 += 1			# LN: 93 | 
	ymem[_tremoloLeftIterator + 0] = i0			# LN: 93 | 
	a0 = ymem[_tremoloRightIterator + 0]			# LN: 94 | 
	AnyReg(i0, a0h)			# LN: 94 | 
	i1 = xmem[_samples + 4]			# LN: 94 | 
	x0 = ymem[i0]			# LN: 94 | 
	x1 = xmem[__extractedConst_2_2 + 0]			# LN: 94 | 
	a0 = x1 * x0			# LN: 94 | 
	i0 = ymem[_tremoloRightIterator + 0]			# LN: 94 | 
	xmem[i1] = a0			# LN: 94 | 
	i0 += 1			# LN: 94 | 
	ymem[_tremoloRightIterator + 0] = i0			# LN: 94 | 
	i0 = xmem[_samples + 3]			# LN: 96 | 
	nop #empty cycle
	i0 += 1			# LN: 96 | 
	xmem[_samples + 3] = i0			# LN: 96 | 
	i0 = xmem[_samples + 4]			# LN: 97 | 
	nop #empty cycle
	i0 += 1			# LN: 97 | 
	xmem[_samples + 4] = i0			# LN: 97 | 
	jmp (endif_9)			# LN: 97 | 
endif_9:			
else_9:			
	a0 = ymem[_selected_mode + 0]			# LN: 100 | 
	uhalfword(a1) = (0x2)			# LN: 100 | 
	a0 = a0 - a1			# LN: 100 | 
	a0g = (0x0)			# LN: 100 | 
	a0 & a0			# LN: 100 | 
	if (a != 0) jmp (else_10)			# LN: 100 | 
	i0 = xmem[_samples + 2]			# LN: 104 | 
	a0 = xmem[_headroom + 0]			# LN: 104 | 
	xmem[i0] = a0h			# LN: 104 | 
	i0 = xmem[_samples + 2]			# LN: 106 | 
	nop #empty cycle
	i0 += 1			# LN: 106 | 
	xmem[_samples + 2] = i0			# LN: 106 | 
	jmp (endif_10)			# LN: 106 | 
init_latch_label_2:			 
endif_10:			
else_10:			
	i0 = i7 - (0x1)			# LN: 74 | 
	a0 = xmem[i0]			# LN: 74 | 
	uhalfword(a1) = (0x1)			# LN: 74 | 
	a0 = a0 + a1			# LN: 74 | 
	i0 = i7 - (0x1)			# LN: 74 | 
label_end_92:			# LN: 74 | CYCLE: 5 | RULES: ()
	xmem[i0] = a0h			# LN: 74 | 
for_end_2:			
	jmp (__epilogue_270)			# LN: 109 | 
__epilogue_270:			
	i7 = i7 - (0x1)			# LN: 109 | 
	i7 -= 1			# LN: 109 |
	ret			# LN: 109 | 
